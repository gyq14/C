import{dL as w,u as N,r as u,i as S,dM as g,dN as m}from"./BKjTAV26.js";const E=w("notification",()=>{const n=g().public.apiUrl,l=N(),i=u([]),a=u(null);function r(o){i.value=o}function s(){i.value=[]}async function c(){var o;try{const t=await fetch(`${n}/api/notification/by-receiver?id=${(o=l.userData)==null?void 0:o.id}`,{method:"GET"});if(!t.ok)throw new Error("Failed to fetch all tasks");const e=await t.json();e&&r(e)}catch(t){console.error(t)}}function d(o=3e3){c(),a.value=m(c,o)}function p(){a.value!==null&&(clearInterval(a.value),a.value=null,s())}async function h(o){try{const t=await fetch(`${n}/api/notification/create`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!t.ok)throw new Error("Failed to create notification");const e=await t.json();e&&r([...i.value,e])}catch(t){console.error(t)}}async function v(o,t){try{const e=await fetch(`${n}/api/notification/update`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:o,status:t})});if(!e.ok)throw new Error("Failed to change status");if((await e.json()).value){const f=i.value.findIndex(y=>y.id===o);f!==-1&&(i.value[f].status=t)}}catch(e){console.error(e)}}return{notificationData:S(()=>i.value),createNotification:h,changeNotificationStatus:v,setNotifications:r,resetNotifications:s,startAutoRefresh:d,stopAutoRefresh:p}},{persist:!0});export{E as u};
